@using Microsoft.Extensions.Options;
@using BlazorApp.Features.Shared.Models
@using BlazorApp.Features.Shared.Services.Abstractions

@inject IOptions<List<FeatureInformation>> _options;
@inject ILocalStorage _localStorage
@inject NavigationManager _navigationManager
@inject IDialogService DialogService

<MudNavMenu Bordered="true">
    <MudNavLink Icon="@Icons.Filled.Home" Href="/#">Home</MudNavLink>
    @foreach (var item in _options.Value.Select(v => v.NavMenuItem))
    {
        <MudNavLink Icon="@item.Icon" Href="@item.Href">@item.Label</MudNavLink>
    }
</MudNavMenu>
<div class="logout">
    <MudNavLink Icon="@Icons.Filled.Settings" @onclick="openSettings">Settings</MudNavLink>
    <MudNavLink Icon="@Icons.Filled.Logout" @onclick="logOut">Log out</MudNavLink>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void logOut()
    {
        await _localStorage.RemoveAsync("auth");
        _navigationManager.NavigateTo("/", true);
    }

    private void openSettings()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth= MaxWidth.ExtraLarge
        };

        DialogService.Show<SettingsModal>("Settings", options);
    }
}