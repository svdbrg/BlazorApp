@using Data

<MudContainer Style="overflow-y: scroll; max-height:480px;">
    @foreach (var fixture in Fixtures)
    {
        <div class="game-wrapper">
            <MudText Style="clear:both;" Typo="Typo.h6">@GetFriendlyDate(fixture.DateAndTime)</MudText>
            <div class="teams">
                <div class="home">
                    <MudText Typo="Typo.subtitle2">
                        @fixture.HomeTeam
                        <img height="25" width="25" class="team-crest" src="@GetCrest(fixture.HomeTeamAltId)" />
                    </MudText>
                </div>
                <div class="time">
                    @if(ShowPastResults) {
                        <MudText Typo="Typo.overline">
                            @fixture.HomeTeamScore - @fixture.AwayTeamScore
                        </MudText>
                    } else {
                        <MudText Typo="Typo.overline">
                            @fixture.DateAndTime.ToString("t")
                        </MudText>
                    }
                  </div>  
                 <div cla   ss="away">
                        <MudText Typo="Typo.subtitle2">
                        <img height="25" width="25" class="team-crest" src="@GetCrest(fixture.AwayTeamAltId)" />
                        @fixture.AwayTeam
                    </MudText>
                </div>
            </div>
            <div class="stadium">
                <MudText Typo="Typo.overline">
                    @fixture.Stadium, @fixture.City
                </MudText>
            </div>
        </div>
    }
</MudContainer>

@code {
    [Parameter] public string TeamName { get; set; } = string.Empty;
    [Parameter] public bool ShowPastResults { get; set; } = false;
    [Parameter] public IEnumerable<Fixture> Fixtures { get; set; } = new List<Fixture>();

    private string GetFriendlyDate(DateTime date)
    {
        if (date.Date == DateTime.Today)
        {
            return "Today";
        }
        else if (date.Date == DateTime.Today.AddDays(1))
        {
            return "Tomorrow";
        }
        else if (date.Date == DateTime.Today.AddDays(-1))
        {
            return "Yesterday";
        }

        return date.ToString("m");
    }

    private string GetCrest(string altId)
    {
        return $"https://resources.premierleague.com/premierleague/badges/25/{altId}.png";
    }
}