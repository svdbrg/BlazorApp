@page "/livedisplayer"
@using BlazorApp.Features.LiveDisplayer.Components
@using Data
@using BlazorApp.Features.LiveDisplayer.Services

@inject IFootballDataService _dataFetcher

<PageTitle>Live Display</PageTitle>

@if (isLoading)
{
    <div class="loading">Loading...</div>
}


<div id="table">
    <Table footballTable="table" />
</div>
<div id="fixtures">
    <Fixtures days="days" />
</div>
<div class="refresh">
    <a class="text-decoration-none" @onclick="@ToggleAutoRefresh">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise"
            viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z" />
            <path
                d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z" />
        </svg>
    </a>
    <label>@autoRefreshing</label>
</div>

@code {
    private IEnumerable<Team> table = new List<Team>();
    private List<Day> days = new();
    private bool isLoading = true;
    private bool autoRefreshing = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetData();
        }
    }

    private async Task ToggleAutoRefresh()
    {
        autoRefreshing = !autoRefreshing;
        while (autoRefreshing)
        {
            @* await Task.Delay(10000);
            isLoading = true;
            await GetData(); *@

            await Task.Delay(2000);
            Console.WriteLine("Active!");
        }
    }

    private async Task GetData()
    {
        table = await _dataFetcher.GetTableAsync();
        days.Clear();

        await foreach (var day in _dataFetcher.GetDaysAndFixturesAsync())
        {
            days.Add(day);
            await InvokeAsync(StateHasChanged);
        }

        table = _dataFetcher.EnrichTableWithStatus(table, days);

        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }
}