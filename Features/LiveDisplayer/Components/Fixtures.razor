@using Data
@using Services

@foreach (var day in days)
{
    <div class="day-wrapper">
        <div class="day">@day.Date</div>
        @foreach (var fixture in day.Fixtures)
        {
            <div class="fixture" @onmouseout="@(() => removeCurrentlyPlayingDelegate(fixture.HomeTeam, fixture.AwayTeam))" @onmouseover="@(() => setCurrentlyPlayingDelegate(fixture.HomeTeam, fixture.AwayTeam))">
                <div class="home @HelperMethods.GetCssClassForCurrentStatus(fixture.Status)">@fixture.HomeTeam</div>
                <div class="result @HelperMethods.GetCssClassForCurrentStatus(fixture.Status)">
                    @(fixture.Status == "U" ? fixture.DateAndTime.ToShortTimeString() : fixture.Result)
                </div>
                <div class="away @HelperMethods.GetCssClassForCurrentStatus(fixture.Status)">@fixture.AwayTeam</div>
            </div>
        }

    </div>
}

@code {
    [Parameter]
    public List<Day> days { get; set; } = new();

    [Parameter]
    public Action<string, string> setCurrentlyPlayingDelegate { get; set; }
    [Parameter]
    public Action<string, string> removeCurrentlyPlayingDelegate { get; set; }
}