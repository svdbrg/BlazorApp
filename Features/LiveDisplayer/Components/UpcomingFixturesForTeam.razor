@using Data
@using Services.Abstractions

@inject IFootballDataService _dataService

<MudDialog DisableSidePadding="true" Class="settings-modal pa-0">
    <DialogContent>
        <MudContainer Style="overflow-y: scroll; max-height:750px;">
            <MudText Typo="Typo.h4">@TeamName</MudText>

            @foreach (var fixture in Fixtures)
            {
                <div class="game-wrapper">
                    <MudText Style="clear:both;" Typo="Typo.h6">@fixture.DateAndTime.ToString("m")</MudText>
                    <div class="teams">
                        <div class="home">
                            <MudText Typo="Typo.subtitle2">
                                @fixture.HomeTeam
                                <img height="25" width="25" class="team-crest" src="@GetCrest(fixture.HomeTeamAltId)" />
                            </MudText>
                        </div>
                        <div class="time">
                            <MudText Typo="Typo.overline">
                                @fixture.DateAndTime.ToString("t")
                            </MudText>
                        </div>
                        <div class="away">
                            <MudText Typo="Typo.subtitle2">
                                <img height="25" width="25" class="team-crest" src="@GetCrest(fixture.AwayTeamAltId)" />
                                @fixture.AwayTeam
                            </MudText>
                        </div>
                    </div>
                    <div class="stadium">
                        <MudText Typo="Typo.overline">
                            @fixture.Stadium, @fixture.City
                        </MudText>
                    </div>
                </div>
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public int TeamId { get; set; }
    [Parameter] public string TeamName { get; set; } = string.Empty;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new();
    void Cancel() => MudDialog.Cancel();

    private IEnumerable<Fixture> Fixtures { get; set; } = new List<Fixture>();

    protected override async void OnInitialized()
    {
        Fixtures = await _dataService.GetUpcomingFixtureForTeam(TeamId);
        StateHasChanged();
    }

    private string GetCrest(string altId)
    {
        return $"https://resources.premierleague.com/premierleague/badges/25/{altId}.png";
    }
}