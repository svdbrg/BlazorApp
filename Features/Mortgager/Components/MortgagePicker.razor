@using BlazorApp.Features.Mortgager.Services.Abstractions

@inject IDataService _dataService

<div class="simple-form">
    <div class="form-group">
        <label for="movie-name">Select mortgage</label>
        <select class="form-select" @onchange="DoStuff">
            <option value="Choose">-- Choose --</option>
            @foreach (var item in ExistingMortgages)
            {
                <option value="@item">@item</option>
            }
            <option value="Other">New</option>
        </select>
        @if (SelectedMortgage == "Other")
        {
            <input @bind="@newMortgage" type="text" class="form-control" id="mortgage-name" />
        }
    </div>

    <button @onclick="SetMortgage" class="btn btn-primary">Submit</button>
    <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Cancel</button>
    <div>@errorMessage</div>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = new();

    private string SelectedMortgage { get; set; } = string.Empty;
    private string newMortgage { get; set; } = string.Empty;
    private string errorMessage { get; set; } = string.Empty;
    List<string> ExistingMortgages { get; set; } = new();

    private void DoStuff(ChangeEventArgs e)
    {
        errorMessage = string.Empty;
        SelectedMortgage = e?.Value?.ToString() ?? string.Empty;
    }

    protected override async void OnInitialized()
    {
        ExistingMortgages = await _dataService.GetAllMortgageDocuments();
        StateHasChanged();
    }

    void SetMortgage()
    {

        if ((SelectedMortgage == "Other" && string.IsNullOrEmpty(newMortgage)) || SelectedMortgage == "Choose" ||
        string.IsNullOrWhiteSpace(SelectedMortgage))
        {
            errorMessage = "Wrong selection";
        }
        else
        {
            if (SelectedMortgage == "Other")
            {
                SelectedMortgage = newMortgage;
            }
            
            ModalInstance.CloseAsync(ModalResult.Ok<string>(SelectedMortgage));
        }
    }
}